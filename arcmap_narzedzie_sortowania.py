# -*- coding: utf-8 -*-
"""ArcMap_Narzedzie_Sortowania.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A-RNkZ1C6r2IJe3ybstxgkX9ulnBE_7k
"""

# -*- coding: utf-8 -*-
import arcpy
import os
#napisuje wyniki przekształceń \/
arcpy.env.overwriteOutput = True

def nazwa_narzedzia():
    try:
        plik_txt=arcpy.GetParameterAsText(0)   #dodanie parametru do narzedia w arcmapie
        plik=open(plik_txt)
        lista=[]
        for rekord in plik.readlines():         
            linia=rekord.rstrip()        # usuwa biale znaki z prawej strony
            wartosci=linia.split(";")    #do listy dodaje wartosci oddzielone ; 
            lista.append(wartosci)

        #arcpy.AddMessage(lista)
        wyjscie=arcpy.GetParameterAsText(1)
        arcpy.CreateFeatureclass_management(os.path.dirname(wyjscie), os.path.basename(wyjscie), "POINT") #point - typ geometrii  
        arcpy.AddField_management(wyjscie, "Nazwa", "TEXT", 30)   #dodaje wlasciwosc plikowi wyjsciowemu, nazwa pliku , typ i precyzja
        cur = arcpy.da.InsertCursor(wyjscie, ["SHAPE@","Nazwa"]) #addfield musi istniec zeby zrobic kursor shape@ oznacza obiekt geometryczny dla danego obiektu
        #obiekt geometryczny typu point
        #geometrie w arcgis poligonowe punktowe polinia...
        max = 0
        min = 999999
        i = 0
        for wsp in lista:	
           #arcpy.AddMessage(wsp)
            if i == 0:
                i =+ 1
            else:	
                x = float(wsp[0].replace(",",".") )
                y = float(wsp[1].replace(",",".") )
                if y>max:
                    max=y
                if y<min:
                    min=y
                srednia=(min+max)/2
                if y>=srednia and y<=max:
                    cur.insertRow([arcpy.Point( x , y ), wsp[2]])
                    arcpy.AddMessage('')
    #obsługa wyjątków
    except Exception, err:
        arcpy.AddError("blad nazwa_narzędzia")
        arcpy.AddError(sys.exc_traceback.tb_lineno)
        arcpy.AddError(err.message)
    #dekcje końcowe
    finally:
            plik.close()
            del(cur)
if __name__ == '__main__':
    nazwa_narzedzia()